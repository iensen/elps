/* Generated By:JJTree: Do not edit this line. ASTchoice_rule.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

public
class ASTchoice_rule extends SimpleNode {
  public ASTchoice_rule(int id) {
    super(id);
  }

  public ASTchoice_rule(ElpsTranslator p, int id) {
    super(p, id);
  }



  public String toString() {
	  String []relations=null;
	  int relationidx=0;
	  if(this.image!=null && this.image!="") {
		  this.image=this.image.trim();
		  relations=this.image.split("\\s");
	  }
	  StringBuilder result=new StringBuilder();
	  int childIdx=0;
	  if(((SimpleNode)this.jjtGetChild(childIdx)).getId()==ElpsTranslatorTreeConstants.JJTARITHMETICTERM) {
		  result.append(((SimpleNode)this.jjtGetChild(childIdx)).toString());
		  ++childIdx;
	  }
	  if(relations!=null && relations[relationidx].startsWith("L")) {
		  result.append(relations[relationidx].substring(1));
		  ++relationidx;
	  }
	  result.append("{");
	  result.append(((ASTchoice_elements)this.jjtGetChild(childIdx)).toString());
	  result.append("}");
	  ++childIdx;
	  if(relations!=null && relationidx<relations.length) {
		  result.append(relations[relationidx].substring(1));
		  ++relationidx;
	  }
	  
	  if(childIdx<this.jjtGetNumChildren()) {
		  result.append(((SimpleNode)this.jjtGetChild(childIdx)).toString());
		  ++childIdx;
	  }
	  return result.toString();
	  
	  
	  
  }
  
}
/* JavaCC - OriginalChecksum=96e827c9aa11c383a197dc09d1b4873e (do not edit this line) */
